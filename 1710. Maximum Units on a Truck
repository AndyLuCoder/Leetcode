// Java
class Solution {
    public int maximumUnits(int[][] boxTypes, int truckSize) {
        Arrays.sort(boxTypes, (a, b) -> Integer.compare(b[1], a[1]));
        int res = 0;

        for(int box[] : boxTypes){
            int curr = Math.min(truckSize, box[0]);
            res += curr * box[1];
            if((truckSize -= curr) == 0)
                return res;
        }
        return res;
    }
}

// C++
class Solution {
public:
    static bool myfunction(vector<int>& a, vector<int>& b){
        return a[1] > b[1];
    }
    int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
        sort(boxTypes.begin(),boxTypes.end(),myfunction);
        int ans=0;
        for(auto box: boxTypes){
            int x=min(box[0],truckSize);  
            ans+=(x*box[1]);
            truckSize-=x;
            if(!truckSize) break;
        }
        return ans;
    }
};
