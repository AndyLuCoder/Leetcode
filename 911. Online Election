// c++
class TopVotedCandidate {
public:
    TopVotedCandidate(vector<int>& persons, vector<int>& times) {
        int n = persons.size(), lead = 0;
        vector<int> count(n + 1);
        this->times = times;
        for (int i = 0; i < n; ++i) {
        	if (++count[persons[i]] >= count[lead]) {
        		lead = persons[i];
        	}
        	m[times[i]] = lead;
        }
    }
    
    int q(int t) {
        int left = 0, right = times.size();
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (times[mid] <= t) left = mid + 1;
            else right = mid;
        }
        return m[times[right - 1]];
    }
    
private:
	unordered_map<int, int> m;
	vector<int> times;
};
