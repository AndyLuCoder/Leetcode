// c#
public class Solution {
    public IList<string> GenerateSentences(IList<IList<string>> synonyms, string text) {
        if(synonyms == null || synonyms.Count == 0) return new List<string>();
        HashSet<string> res = new HashSet<string>();
        Dictionary<string, List<string>> dict = new Dictionary<string, List<string>>();
        Queue<string> que = new Queue<string>();
        
        foreach(var item in synonyms) {
            if(!dict.ContainsKey(item[0])) {
                dict.Add(item[0], new List<string>());
            }
            dict[item[0]].Add(item[1]);
            
            if (!dict.ContainsKey(item[1])) {
                dict.Add(item[1], new List<string>());
            }
            dict[item[1]].Add(item[0]);
        }
        
        res.Add(text);
        que.Enqueue(text);
        
        while(que.Count > 0) {
            string[] cur = que.Dequeue().Split(" ");
            for(int i=0; i<cur.Length; i++) {
                if(dict.ContainsKey(cur[i])) {
                    foreach(var item in dict[cur[i]]) {
                        string[] copy = cur;
                        copy[i] = item;
                        string temp = String.Join(" ", copy);
                        if (!res.Contains(temp)) {
                            res.Add(temp);
                            que.Enqueue(temp);
                        }
                    }
                }
            }
        }
        return res.OrderBy(x=>x, StringComparer.Ordinal).ToList();
    }
}
