// c++
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int n = nums.size();
        if(n<3) return res;
        sort(nums.begin(), nums.end());
        
        for(int i=0; i<n-2; i++) {
            if(i>0 && nums[i] == nums[i-1]) continue;
            if(nums[i] + nums[i+1] + nums[i+2] > 0) break;
            if(nums[i] + nums[n-1] + nums[n-2] < 0) continue;
            int left = i+1, right = n-1;
            while(left < right) {
                while(left < right && left > i+1 && nums[left] == nums[left-1]) left++;
                while(left < right && right < n-1 && nums[right] == nums[right+1]) right--;
                while (left < right && nums[i] + nums[left] + nums[right] < 0) left++;
                while (left < right && nums[i] + nums[left] + nums[right] > 0) right--;
                if (left < right && nums[i] + nums[left] + nums[right] == 0) {
                    vector<int> tmp = {nums[i], nums[left], nums[right]};
                    res.push_back(tmp);
                    left++;
                }
            }
        }
        return res;
    }
};
