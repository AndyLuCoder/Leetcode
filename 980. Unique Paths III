// 1. C# code
public class Solution {
    public int UniquePathsIII(int[][] grid) {
        int m = grid.Length, n = grid[0].Length;
        int target = 0, x0 = -1, y0 = -1;
        for(int i=0; i<m; i++) {
            for(int j=0; j<n; j++) {
                if(grid[i][j] == 1) {
                    x0 = i; y0 = j;
                } 
                if(grid[i][j] != -1) {
                    target++;
                }
            }
        }
        
        int res = 0;
        return helper(grid, x0, y0, target);
    }
    
    int helper(int[][] grid, int x, int y, int target) {
        int m = grid.Length, n = grid[0].Length;
        if(x<0 || x>=m || y<0 || y>=n || grid[x][y] == -1) return 0;
        target--;
        if(grid[x][y] == 2) {
            if(target == 0) {
                target++;
                return 1;
            } else{
                target++;
                return 0;
            }
        }
        int res = 0;
        
        grid[x][y] = -1;
        res += helper(grid, x+1, y, target);
        res += helper(grid, x-1, y, target);
        res += helper(grid, x, y+1, target);
        res += helper(grid, x, y-1, target);
        target++;
        grid[x][y] = 0;
        return res;
    }
}
