// c++
class NumArray {
public:
    NumArray(vector<int>& nums) {
        data.resize(nums.size());
        bit.resize(nums.size() + 1);
        for (int i = 0; i < nums.size(); ++i) {
            update(i, nums[i]);
        }
    }
    
    void update(int index, int val) {
        int diff = val - data[index];
        for (int j = index + 1; j < bit.size(); j += (j&-j)) {
            bit[j] += diff;
        }
        data[index] = val;
    }
    
    int sumRange(int left, int right) {
        return getSum(right + 1) - getSum(left);
    }
    
    int getSum(int i) {
        int res = 0;
        for (int j = i; j > 0; j -= (j&-j)) {
            res += bit[j];
        }
        return res;
    }
    
private:
    vector<int> data, bit;
};
