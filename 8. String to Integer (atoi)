// java
class Solution {
    public int myAtoi(String s) {
        int n = s.length(), i=0, sign = 1, res = 0;
        while(i<n && s.charAt(i) == ' ') i++;
        if(i==s.length()) return 0;
        if(s.charAt(i) == '+' || s.charAt(i) == '-') {
            sign = s.charAt(i++) == '+' ? 1 : -1;
        }
        
        while(i<n &&s.charAt(i)>='0' && s.charAt(i) <= '9') {
            int digit = s.charAt(i) - '0';
            if((res > 0 && res > (Integer. MAX_VALUE - digit) / 10) || (res < 0 && res < (Integer. MIN_VALUE - digit) / 10)) {
                return sign == 1 ? Integer. MAX_VALUE : Integer. MIN_VALUE;
            }
            res = res*10 + digit;
            i++;
        }
        return sign * res;
    }
}

// c++
class Solution {
public:
    int myAtoi(string s) {
        int n = s.size(), i=0, sign = 1, res = 0;
        while(i<n &&s[i] == ' ') i++;
        if(s[i] == '+' || s[i] == '-') {
            sign = s[i++] == '+' ? 1 : -1;
        }
        
        while(i<n &&s[i]>='0' &&s[i] <= '9') {
            int digit = s[i] - '0';
            if((res > 0 && res > (INT_MAX - digit) / 10) || (res < 0 && res < (INT_MIN - digit) / 10)) {
                return sign == 1 ? INT_MAX : INT_MIN;
            }
            res = res*10 + digit;
            i++;
        }
        return sign * res;
    }
};
